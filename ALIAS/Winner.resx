<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="AnimationTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>156, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABEDBAVjxEVHYMAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAACQwQFrkcJC/wVW2Q/kFUb/gFBwnqAAAAIAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwoNrDlKYfiPt/H/jbXv/5W//P9jgKn9CgwQ4gAA
        ABkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlAQEB/goNEf8UGSL/EBQb/wkL
        D/8aIiz/Cw4S/wYIDOYAAAAiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYICw/sXnmf/5O9
        +f+Vv/z/lb/8/5S++/+Bpdn/WXOX/xkhK/0DBAXnAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AGsyQFXxk7z4/5W//P+Vv/z/lb/8/5W//P+Vv/z/lb/8/5O9+f83RVzxBAYHqAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAHgcJDOwfKDX/DBAV/zRDWP9yksH/lb/8/5W//P+Vv/z/lb/8/5W//P+OtvD/AQEB/gAA
        AC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAICg4R2l14nv+Vv/z/kLjz/2B7ov8dJTD/LDhK/4Wq4P+Vv/z/lb/8/5W/
        /P+Fq+H/AAAA/wkLDpoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAB4AAABLAAAAVQICAm0KDRHXDA8U/kZZdv9Taoz/iK/m/5W//P+Uvvv/W3Wa/xQZ
        Iv+Ksen/lb/8/5W//P9dd53/JjFA/wcJDe8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAwAAAAXQEBA4IICg6OBggKfAAAAFwAAAApAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAUAAABsBQYJ3woNEfEpNUbrOktj80RYc/xNYoH/Q1Vx/xMZIf9BVG//DxMa/1hw
        lP+Uvvv/lb/8/3SUxP+OtvD/lb/8/5K79/8WHCX/ep3P/xAUHPMAAAAkAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAJCxEVgQkMEewWHCbxPE5n91Rsjv9Zc5f/EBUc/zFAU/cTGCDuBgkLxQAA
        ABsAAAAUAAAAEgAAAAAAAAAAAAAAOgcIC9gnM0PpfaDT/5W//P+Vv/z/lb/8/5W//P+Vv/z/k735/w4S
        GP+Ksen/harg/zlJYP+DqN3/lb/8/5W//P+Vv/z/lb/8/4as4v9NYoH/lb/8/zZGXPYAAABSAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgIDD4JDBHuOElh/IGm2v+Vv/z/lb/8/5W//P9ohbD/GyMu/5S+
        +/+Vv/z/Sl589w0QFvMRFx3zDA8U9gYICvkGCAr0AAAA/yQuPf9tjLn/jLTt/5W//P+Vv/z/lb/8/5W/
        /P+Vv/z/lb/8/1NqjP9RZ4j/lb/8/5W//P+Vv/z/lb/8/4Wq4P9PZob/kbv2/5W//P+Vv/z/lb/8/1Jp
        iv8SFx6NAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQkMVQ0RFvVzlMP/lb/8/4iu5f9bdJn/lL36/1t0
        mf8QFRz/e53Q/5W//P+Vv/z/lb/8/5W//P+Vv/z/lb/8/5O9+f+ApNj/ZYKr/0tgfv8WHCX/AQEB/xce
        KP82Rlz/UWeI/2aCrP96nc//j7jy/5W//P+Vv/z/kLn0/4Ck2P9deJ7/M0FW/w8TGf9MYYD/lL36/5W/
        /P+Vv/z/lb/8/2mGsf8WGyTBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlCQwQ83+j1/+Vv/z/lb/8/09l
        hf8QFRz/EBQb/yw5S/+Bptr/lb/8/5W//P+Vv/z/lb/8/5W//P+Vv/z/lb/8/5W//P+Vv/z/lb/8/5W/
        /P+Nte7/HCQv/0xhgP9sirb/UGeH/zVDWf8aISv/BwkM/wAAAP8JDBD/BggL/xoiLP85SWH/LDlL/01i
        gf+Vv/z/lb/8/5W//P+Vv/z/lb/8/3qczv8RFh3aAAAAAAAAAAAAAAAAAAAAAAAAAAAKDRLBXXie/pW/
        /P+Vv/z/lb/8/5G79v9wj73/hqzi/5W//P+Vv/z/ibDo/0BRaP9WbpD/lb/8/5W//P9sirP/ICcw/0th
        f/+GrOP/lb/8/5W//P+Vv/z/gaba/w0QFv+Ms+z/lb/8/5W//P+Vv/z/lb/8/5S9+v+Vv/z/lb/8/5W/
        /P+Vv/z/hqzi/xAVHP9kgKn/k735/5W//P+Vv/z/lb/8/4Op3v8NERfmAAAAAAAAAAAAAAAAAAAAAAAA
        ACQMDxPzk7z4/5W//P+Vv/z/k735/3ue0f9phrH/bo26/5W//P9zlMP/FRke/2tubP8bHiL/b468/5W/
        /P8qMTv/h4eA/1RYWv8YHSX/lb/8/5W//P+Vv/z/lb/8/zpKYv9Wb5L/lb/8/5W//P+Vv/z/lb/8/5W/
        /P+Vv/z/lb/8/5W//P+Vv/z/lb/8/3ue0f8vPE//FBki/1Foif+Pt/H/lb/8/4Kn3P8NEBbkAAAAAAAA
        AAAAAAAAAAAAAAAAAHJCVG/0lb/8/5W//P9xkb//Fx4o/x8oNP8yQFT/TmSD/5W//P9ph7L/ICIk/9TU
        yv9jZGD/DQ4Q/yQnK/8CAgL/aWlk/0NEQv9Uaov/lb/8/5W//P+Vv/z/lb/8/2N/p/8wPlL/lb/8/5W/
        /P+Vv/z/lb/8/5W//P+Vv/z/lb/8/5W//P+Vv/z/lb/8/5W//P+Vv/z/gKTY/z1PaP8oNET/lb/8/2yL
        t/8QFR3GAAAAAAAAAAAAAAAAAAAAAAYKC5ZbdZr/lb/8/2iFsP8QFRz/AgME/4yz7P+Vv/z/lb/8/5W/
        /P+Vv/z/RVZu/woKCv9BQT7/paWd/8bGvP+0tKv/dnZw/xQVFf9DVW7/lL77/5W//P+Vv/z/lb/8/3+j
        1/8oM0P/lb/8/5W//P+Vv/z/krv3/5W//P+Vv/z/lb/8/5W//P+Vv/z/lb/8/5W//P+Vv/z/lb/8/5W/
        /P+Tvfn/lb/8/zdGXfkLDRNzAAAAAAAAAAAAAAAAAAAAAAcJDYVNY4L/e53Q/w4SGP9GWnf/LDhK/5W/
        /P+Vv/z/ZYCn/0dadf9eeZ//ICUr/5GRiv/k5Nn/5OTZ/+Tk2f/k5Nn/5OTZ/9nZz/81ODr/SFx6/2qI
        s/9ujrv/lb/8/5W//P+Uvvv/kLn0/1Jnhf8nLjf/BAUG/2uHr/+Vv/z/c5PC/3aXyP+Vv/z/lb/8/5W/
        /P+Vv/z/lb/8/5W//P+Vv/z/k735/wIDBPsAAAAQAAAAAAAAAAAAAAAAAAAAAAAAADcSGCD1ICg1/2eE
        rv9DVnL/XHab/5W//P+Vv/z/NkBN/19fWv87PDv/P0A+/+Tk2f/e3tP/VFdZ/w0PEv8YGx7/pKah/+Tk
        2f+4uK//BwgI/0xOTf8VFhn/f6PX/5W//P+Vv/z/eJrM/x0fIf+0tKv/hIR+/0pXav+IruX/EhQX/yMm
        Kf8mLzz/ep3P/5W//P+Vv/z/lb/8/5S++/+QufT/lb/8/yo1R/EAAABZAAAAAAAAAAAAAAAAAAAAAAAA
        AAAQFBrbJTA//5W//P9HW3n/UWiJ/5W//P+Uvfr/EBIV/4aGgP9UVVL/iIiB/+Tk2f+EhYL/NUNW/5C4
        8/97ndD/DxIV/9nZz//j49j/DQ0N/7m5sP8tLzH/cpLB/5W//P+Vv/z/j7jy/xMWGf9zc27/GRoa/wMD
        BP8LDA7/LS4t/9DQxv84Ojv/YHui/5W//P+Vv/z/fKDS/xIWHv8MDxT/Xnmf/2mHsv8LDRG5AAAAAAAA
        AAAAAAAAAAAAAAAAAAAZISufT2aG/4iu5f8RFh3/f6PX/5W//P+Uvvv/X3qh/zVDV/8JCgv/sLCo/+Tk
        2f9kaGr/VW2P/5W//P+Vv/z/GR4m/8TEuv/h4db/CwwM/y0yOf84RFT/ibDo/2B6of9ujbr/k735/yUs
        Nv9CRET/wsK5/+Hh1v/NzcP/enp1/xkaGv8VFxr/kbr1/5W//P+Vv/z/OUlg/1pzmP+GrOP/NkZc/4as
        4v8ICw7lAAAAAAAAAAAAAAAAAAAAAAAAAAAMDxaiXnmf/5W//P+Pt/H/lb/8/5W//P+Vv/z/lb/8/5W/
        /P8vOkj/qqqi/+Tk2f+ur6j/Fhsi/2SBqv9FWHX/JSku/+Pj2P+srKP/Mzk//5W//P+Vv/z/i7Lr/xQW
        Gf8xNDb/DxIV/zw9PP/g4NX/5OTZ/9DQxv/X183/5OTZ/7a2rf8WFxj/hqzi/4as4v+OtvD/Q1Vx/1Jq
        i/+Vv/z/lb/8/4Wq4P8IDA/lAAAAAAAAAAAAAAAAAAAAAAAAAAAHCAuzaIWw/5W//P+Vv/z/lb/8/5W/
        /P+Vv/z/lb/8/195oP8LDA7/UFJT/+Tk2f/k5Nn/m52a/0RKUP9fZWr/1NTK/+Tk2f88PTr/MDpJ/4Oo
        3f+Vv/z/ZYKr/0xQUv/g4NX/FRYX/8jIv//k5Nn/WFxe/xIVGf8SFBf/nqGe/+Tk2f9qamX/BwcI/xYY
        Gv9GWHL/gqfc/xIXH/9wj73/lb/8/2SAqf8MEBW8AAAAAAAAAAAAAAAAAAAAAAAAAAAEBAe0bYu4/5W/
        /P+Vv/z/XXed/4Ck2P+Vv/z/T2OC/yMlJ//AwLf/LjAw/29wbP/g4NX/5OTZ/+Tk2f/k5Nn/5OTZ/39/
        ef80NjX/b3Jx/wUGB/+Nte7/YXyk/xETFf85Ojn/Q0VF/+Tk2f+wsan/HCMt/5C59P92l8j/Fxsg/+Tk
        2f+ysqn/Ozw7/6Kimv83Q1T/lb/8/3WXx/8QFRz/ep3P/xkgKvQAAABJAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACUUmmL7JW//P+Vv/z/GSAq/36i1f+Vv/z/dpfI/xMWGf+srKP/V1pa/xIVGv8dHh//cXFr/42N
        hv99fXf/Ozw7/wwND/8rLjD/Y2Rg/y44Rf+Vv/z/lb/8/4y07f9GWXT/XF5f/+Tk2f+WmJT/Lz1Q/5W/
        /P+Tvfn/DhAU/9zc0f/Gxr3/CAgI/xUXGP8/TmP/lb/8/5W//P9SaYr/CQsP/Q0SF6UAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABDExgg7JS9+v+Vv/z/Fx0n/2J9pf9tjLn/lb/8/3WWxv8QExf/N0Za/4+4
        8v9hfKT/HiAh/19fWv8gISH/UmmK/5O8+P9qiLT/O0pg/4Wq4P+Vv/z/lb/8/5C48/9DVXH/Nzs+/+Tk
        2f/X18z/Gh0h/z9Ra/8nMkH/SU1R/+Tk2f+mpp7/LTM8/4qx6f+Vv/z/lb/8/5W//P93mMn/AwQG9gAA
        AAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAoNv0xgf/iVv/z/QFJs/wgKDv91l8f/lb/8/5W/
        /P+Vv/z/lb/8/5W//P90lMT/JScp/4iJg/8tLy//Xnmf/5W//P+Vv/z/lb/8/5W//P+Vv/z/eZvN/xMX
        HP9QU1b/HyEh/7e3rv/k5Nn/09PJ/4mMiv+bnZj/4eHW/+Hh1v9AQkD/NUNW/5W//P+Vv/z/lb/8/5W/
        /P94msv/Cg4T0QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAYJC9tHXHnxKTVG/2B8
        o/+Vv/z/lb/8/5W//P+Vv/z/lb/8/5W//P+PuPL/TGB9/0ZZdv9IXXv/gqfc/5W//P+Vv/z/lb/8/5W/
        /P+Vv/z/fKDS/xcbH/++vrX/UFFO/xUWGf+wsKj/5OTZ/+Tk2f/k5Nn/2dnP/0REQv9NT03/Nzo+/0JU
        bv+Vv/z/lb/8/5W//P9jgKn9BwkMoQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABEFBgiUBQcJ+5O8+P+Vv/z/kbr1/4+48v+Vv/z/VGuN/2uJtf+Vv/z/lb/8/5W//P+Vv/z/lb/8/5W/
        /P+Vv/z/lb/8/5W//P+Vv/z/lb/8/195oP8RFBj/RFVu/2eFr/8hJy//Jykp/1VWVf9RU1L/FhcZ/wkK
        C/+goJj/ICMl/1x2m/+Vv/z/lb/8/5W//P8vPVDoAAAAYgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADBggK9JS++/+Vv/z/XXie/0RXc/+Vv/z/GyIt/3+j1/+Vv/z/aoiz/3mb
        zf+Vv/z/lb/8/5W//P+Vv/z/lb/8/5W//P+Vv/z/lb/8/5W//P+Vv/z/lb/8/5W//P9UaYX/YWFd/6Cg
        mP8hIiP/aoiz/2mHsv8qMTz/Y3+n/5W//P+Vv/z/lb/8/3+j1v8FBgjsAAAADAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACw4TxmqIs/+Vv/z/hqzi/xIXH/9dd53/Ehcf/4Oo
        3f+Vv/z/WHCU/z1OZ/+Vv/z/lb/8/4y07f9deJ7/OEde/yk1Rv8kLj3/Lz1Q/09mhv+QuPP/lb/8/5W/
        /P9JWW//GRwe/youMP8KCw3/havh/5W//P+Vv/z/lb/8/5W//P+Vv/z/ia/n/xMYIe8AAABaAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALQwPFfJ2l8j/lb/8/36h
        1P8rN0j/AgID/xIXH/8eJjL/Fhwl/w0RF/+OtvD/YHui/xAUG/8+T2n/YHui/3eYyf93mcr/bYy5/zpL
        Y/8zQlf/lb/8/5W//P+Tvfn/gaba/3yf0v97ntH/lb/8/5W//P+Vv/z/lb/8/5K79/9jf6f/DREX8gYI
        CnYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgI
        DToKDRPwRFdz/Yas4v+Vv/z/j7fx/3yf0v97ntH/g6jd/zpLY/8wPlL/Exkh/4Wr4f+Vv/z/lb/8/4Op
        3v+RuvX/lb/8/3SUxP8eJjL/lb/8/5W//P+Vv/z/lb/8/5W//P+Vv/z/lb/8/4217/8xP1X8ICk19wgK
        DvgOERjHAAAANQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAATERYdlQcJC/UiKzn3R1t5/155n/9ti7j/aoiz/0VZdf4AAAD/Q1Vx/pW/
        /P+Vv/z/lb/8/0tgfv8NEBb/HSUw/w8TGv9qiLT/lb/8/5W//P+Vv/z/lb/8/5W//P+Vv/z/k735/zE/
        U/gICxCfAAAALQAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAQ6GB8riBohLbUUGiPDFBghsAoM
        EH8AAABLBwoN5UVZdfmPuPL/lb/8/5W//P+Nte//gaba/5O8+P+Vv/z/lb/8/5W//P+Vv/z/lb/8/5W/
        /P91lsb/Iy48+Q4SGbwAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAEAwPFaUJDBD2QFJt/G6Nuv+JsOj/lb/8/5W//P+Ir+b/X3qh/iMs
        Ou8JDBDyDA8V8QUHCfcMEBXdCgoPYgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATDA4UfBMYH8kJDBDsBQYI9wQG
        B/YGCArpBwkMqgAAAEoAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP/////w/wAA/////8B/AAD/////wD8AAP////+AHwAA/////wAPAAD/////AA8AAP//
        //4ABwAA/////AAHAAD////AAAcAAP+A/gAAAwAA/AAMAAADAAD4AAAAAAMAAPAAAAAAAwAA4AAAAAAD
        AADgAAAAAAMAAMAAAAAAAwAAwAAAAAADAADAAAAAAAMAAMAAAAAAAwAAwAAAAAADAADgAAAAAAMAAOAA
        AAAAAwAA4AAAAAADAADgAAAAAAMAAOAAAAAAAwAA4AAAAAAHAADgAAAAAAcAAPAAAAAADwAA8AAAAAAP
        AAD4AAAAAA8AAPwAAAAADwAA/gAAAAAfAAD+AAAAAD8AAP8AAAAAfwAA/4AAAAH/AAD/4AAAB/8AAP//
        4AAP/wAA///4Af//AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>